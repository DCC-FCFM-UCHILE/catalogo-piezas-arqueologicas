{"version":3,"file":"static/js/92.91fd96ae.chunk.js","mappings":"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","sources":["pages/Login/Login.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { Stack } from \"@mui/material\";\nimport { useToken } from \"../../hooks/useToken\";\nimport { API_URLS } from \"../../api\";\nimport { useSnackBars } from \"../../hooks/useSnackbars\";\n\n/**\n * The Login component provides a form for users to log in.\n * Upon successful login, it sets the authentication token and redirects the user.\n * @returns {JSX.Element} Component for user login.\n */\nconst Login = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { addAlert } = useSnackBars();\n  const { setToken } = useToken();\n\n  // State to manage form input values\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // State to store the admin email\n  const [adminEmail, setAdminEmail] = useState(\"\");\n\n   // Fetch admin email when component mounts\n   useEffect(() => {\n    const fetchAdminEmail = async () => {\n      try {\n        const response = await fetch(`${API_URLS.ADMIN_MAIL}`);\n        const data = await response.json();\n       \n        setAdminEmail(data.admin_email);\n      } catch (error) {\n        console.error(\"Error fetching admin email:\", error);\n      }\n    };\n\n    fetchAdminEmail();\n  }, []);\n\n  // Function to handle changes in form input fields\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(API_URLS.AUTH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formValues),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        // Handle error response\n        addAlert(data.detail);\n        return;\n      }\n\n      // Set authentication token in local storage\n      setToken(data.token.replace(/\"/g, \"\"));\n\n      // Redirect user to previous location or home page\n      const from = location.state?.from || \"/\";\n      console.log(\"from\", from);\n      if (from !== \"/\" && String(from.pathname).includes(\"/reset-password\")) {\n        navigate(\"/\");\n      } else {\n        navigate(from, { replace: true });\n      }\n    } catch (error) {\n      // Handle any errors that occurred during fetch\n      addAlert(\"Ha ocurrido un error durante la autenticación\");\n    }\n  };\n\n  return (\n    <CustomStack>\n      {/* Title for the login page */}\n      <CustomTypography variant=\"h1\">Inicio de sesión</CustomTypography>\n      \n      {/* Form container */}\n      <CustomBox\n        component=\"form\"\n        autoComplete=\"off\"\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      >\n        {/* username input field */}\n        <TextField\n          required\n          id=\"username\"\n          name=\"username\"\n          label=\"Usuario\"\n          type=\"text\"\n          margin=\"normal\"\n          value={formValues.username}\n        />\n        \n        {/* Password input field */}\n        <TextField\n          required\n          id=\"password\"\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          margin=\"normal\"\n          value={formValues.password}\n        />\n        \n        {/* Submit button */}\n        <CustomButton variant=\"contained\" color=\"primary\" type=\"submit\">\n          Iniciar sesión\n        </CustomButton>\n\n        {/* Password recovery message */}\n        <CustomTypography variant=\"body2\" align=\"center\" marginTop={2}>\n          <LinkTypography onClick={() => navigate(\"/password-recovery\")}>\n          Recuperar Contraseña\n          </LinkTypography>\n        </CustomTypography>\n      </CustomBox>\n    </CustomStack>\n  );\n};\n\n// Styled Stack component for centering content vertically\nconst CustomStack = styled(Stack)(({ theme }) => ({\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  rowGap: theme.spacing(1),\n}));\n\n// Styled Typography component for the page title\nconst CustomTypography = styled(Typography)(({ theme }) => ({\n  marginTop: theme.spacing(12),\n  marginBottom: theme.spacing(3),\n}));\n\n// Styled Box component for containing the form elements\nconst CustomBox = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n}));\n\n// Styled Button component for the submit button\nconst CustomButton = styled(Button)(({ theme }) => ({\n  marginTop: theme.spacing(3.5),\n}));\nconst LinkTypography = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  cursor: \"pointer\",\n  textDecoration: \"underline\",\n  \"&:hover\": {\n    color: theme.palette.primary.dark,\n  },\n}));\n\nexport default Login;\n\n"],"names":["CustomStack","styled","Stack","_ref","theme","justifyContent","alignItems","rowGap","spacing","CustomTypography","Typography","_ref2","marginTop","marginBottom","CustomBox","Box","_ref3","display","flexDirection","CustomButton","Button","_ref4","LinkTypography","_ref5","color","palette","primary","main","cursor","textDecoration","dark","Login","navigate","useNavigate","location","useLocation","addAlert","useSnackBars","setToken","useToken","formValues","setFormValues","useState","username","password","adminEmail","setAdminEmail","useEffect","async","response","fetch","concat","API_URLS","ADMIN_MAIL","data","json","admin_email","error","console","fetchAdminEmail","_jsxs","children","_jsx","variant","component","autoComplete","onChange","e","name","value","target","onSubmit","preventDefault","_location$state","AUTH","method","headers","body","JSON","stringify","ok","detail","token","replace","from","state","log","String","pathname","includes","TextField","required","id","label","type","margin","align","onClick"],"sourceRoot":""}